[midi]
# midi options of the device to use
port: 0

#IAC driver loopback:
#noteon_id: 144

#M-audio midi controller:
#noteon_id: 152
#noteoff_id: 128
#pedal_id: 184
#pedal_midi_sostenuto: 7

#Yamaha Clavinova:
noteon_id: 144
noteoff_id: 128
pedal_id: 176
pedal_midi_sostenuto: 66

#Casio keyboard:
#pedal_midi_sostenuto: 67


[Hello World]
# simple alphanumeric & commands 1-1 mapping used Hello World module
# midinumber  :  alphanumeric or command mapping
22: .tempo
23: .play
25: e
32: enter
33: sc-evaluate
39: v
42: u
44: b
49: =
50: ~
51: +
52: *
53: /
54: -
56: space
57: 0
58: space
59: 2
60: 3
61: w
62: p
63: s
64: n
65: d
66: i
67: m
68: b
70: n
71: t
73: o
86: g
88: n
89: d
90: a
91: k
92: h
93: l
95: backspace
96: o
97: c
98: r
105: .
108: down
toggle: 107

[shortcuts]
# first key that remains presses, second key
eval: shift, enter

[shortcuts mapping]

[Motippets]
# simple alphanumeric & commands 1-1 mapping used in Motippets module and evaluation shortcut
66: motippetssc-evaluate

[Motippets register division]
# midi note register limits (21 <= mid_low is low register, between mid_low and mid_hi is mid register, > mid_hi is hi)
mid_low: 49
mid_hi: 78

[chordal main motifs midi]
motif_1: 59, 62, 66, 60, 64, 67, 62, 69, 66
motif_2: 70, 51, 62, 60, 44, 63, 66, 62, 55, 49

[melodic main motifs midi]
motif_3: 45, 47, 48, 49

[chordal conditional motifs midi]
conditional_1: 36, 31, 29, 26, 28, 35, 38, 33, 24, 26, 31, 28, 33, 21, 23, 29

[melodic conditional motifs midi]
conditional_2: 49, 45, 48, 49, 43
conditional_3: 97, 93, 96, 97, 91

[chordal conditional results motifs midi]
conditional_result_1: 21,22,23
conditional_result_2: 23,24,25

[melodic conditional results motifs midi]
conditional_result_3: 68,74,74,63,69
conditional_result_4: 99, 92, 90, 89, 92, 94
conditional_result_5: 26,23,23

[melodic mini motifs]
mini_motif_1: 35, 38, 42
mini_motif_2: 26, 32, 35, 38
mini_motif_3: 38, 42, 47
mini_motif_4: 86, 90, 93
mini_motif_5: 86, 92, 95, 98
mini_motif_6: 60, 64, 67
mini_motif_7: 50, 56, 59, 62
mini_motif_8: 72, 74, 62, 66, 64

[chordal mini motifs]
mini_motif_9: 62, 65, 66

[snippets code output]
# motif_name : code output
# (in this case supercollider)
# (duplicate names won't work!)
motif_1: osc().osc()
motif_2: ~snippet2 = Ndef(\acc, {|note=500, amp=0.036, cut=200, bw=0.5, fx=0.1| BPF.ar(Resonz.ar(SinOsc.ar([note.lag(1), note.lag(2)*3/2, note*2, note.lag(1.5)*4/3]), (note*LFTri.kr(fx).range(1/2, 8))+80, bw), 600, 0.8) * amp.lag(0.5)}).play(0,2);
motif_3: "hi world".postln;

mini_motif_1: ~map_rhythm = true; Ndef(\piano_fx).map(\rate, Ndef(\krm1_r)); ~tremoloL1;
mini_motif_2: Ndef(\acc).map(\amp, Ndef(\krm2_2)); ~tremoloL2
mini_motif_3: ~map_amplitude = true;  Ndef(\piano_fx).map(\amp, Ndef(\krm1_a)); ~tremoloL1amp;
mini_motif_4: Ndef(\piano_fx).map(\dec, Ndef(\krm1_d)); ~tremoloH1
mini_motif_5: Ndef(\acc).map(\fx, Ndef(\krm2_3)); ~tremoloH2;
mini_motif_6: ~map_amp_ost = true; ~tremoloM1;
mini_motif_7: Ndef(\acc).map(\note, Ndef(\krm2_1)); ~tremoloM2;
mini_motif_8: ~map_amp_org = true; ~tremoloM3;
mini_motif_9: "say -v juan belly mamacita".unixCmd;

#conditionals
conditional_1: setting up a conditional: IF number of \nnotes played is more than 100 in...
conditional_2: setting up an ONGOING conditional: \nIF range is more than...
conditional_3: setting up an ONGOING conditional: \nIF range is less than...

# motif name : code, flag [osc | reset | gomb], [osc address | motif_name to reset], optional flag [grab_value | a value], optional flag [random1 | random2]
conditional_result_1_comment: if true -> stop ~snippet2, if false -> nothing
conditional_result_1_true: ~snippet2.stop;, reset, motif_2
conditional_result_1_false: //nothing

conditional_result_2_comment: if true -> stop ~snippet1, if false -> nothing
conditional_result_2_true: ~snippet1.stop(20);, reset, motif_1
conditional_result_2_false: //nothing

conditional_result_3_comment: if true -> play gong sound!, if false -> play gong sound!
conditional_result_3_true: ~gong.play, osc, gong, grab_value, random2
conditional_result_3_false: ~gong.play, osc, gong, grab_value, random2

conditional_result_4_comment: Activate self-destruct mechanism
conditional_result_4_true: ~stop.all;, gomb
conditional_result_4_false: //nothing

conditional_result_5_comment: if true -> if true -> play huygens sample, if false -> play huygens sample
conditional_result_5_true: ~huygens.stuk(), osc, huygens, grab_value, random1
conditional_result_5_false: ~huygens.stuk(), osc, huygens, grab_value, random1

[snippets code output callback]
# motif_name : code output
# (code to be evaluated after the normal code output, for example: for unmapping)
# (duplicate names won't work!)
mini_motif_1: ~map_rhythm = false; Ndef(\piano_fx).set(\rate, ~tremoloL1.linlin(1, 16, 1/2, 18));
mini_motif_2: Ndef(\acc).set(\amp, ~tremoloL2.linlin(1, 16, 0, 1.5))
mini_motif_3: ~map_amplitude = false; \amp, Ndef(\piano_fx).set(\amp, ~tremoloL1amp.linlin(1, 16, 0.01, 1));
mini_motif_4: [\pulse, \pulse2, \pulse3, \pulse4, \pulse5, \pulse6].do{|i| Ndef(i).set(\fx, ~tremoloH1.linlin(1, 16, 1, 88));}
mini_motif_5: Ndef(\acc).set(\fx, ~tremoloH2.linlin(1, 16, 0, 15));
mini_motif_6: ~map_amp_ost = false;
mini_motif_7: Ndef(\acc).set(\note, ~tremoloM2.linlin(1, 16, 180, 800));
mini_motif_8: ~map_amp_org = false;
mini_motif_9: {1.wait; "say -v vi hello handsome".unixCmd}.fork;

[snippets special flags]

[motif counter]
playlimit: 1

[snippets for tremolos]
mini_motif_1: ~tremoloL1 =
mini_motif_2: ~tremoloL2 =
mini_motif_3: ~tremoloL1amp =
mini_motif_4: ~tremoloH1 =
mini_motif_5: ~tremoloH2 =
mini_motif_6: ~tremoloM1 =
mini_motif_7: ~tremoloM2 =
mini_motif_8: ~tremoloM3 =

[conditionals settings]
#name : type [note_count, range_more_than, range_less_than], [perpetual (true | false): 1 | 0], optional settings [totalnotes, ]
conditional_1: note_count, 0, 100
conditional_2: range_more_than, 1
conditional_3: range_less_than, 1
# make volume,

[motippets display settings]
#motif_name : display column id
motif_1: 1
motif_2: 2
mini_motif_1: 1
mini_motif_2: 2
mini_motif_3: 1
mini_motif_4: 1
mini_motif_5: 2
mini_motif_6: 5
mini_motif_7: 2
mini_motif_8: 5
mini_motif_9: 1

[motippets random limits]
# name : bottom limit, upper limits.
random: 10, 45
random1: 1, 80
random2: -2, 10
#NOTE: random2 multiplies by a value extracted from the function where it is used

[ckalculator]
shift: off
wrong_note_tolerance: 1

[lambda]
# lambda function : midi number mapped to the function
evaluate_function: 83
identity_midi: 82
select_first_midi: 0
select_second_midi: 0
successor_midi: 84, 85
predecessor_midi: 0
add_midi: 86
subtract_midi: -1
mult_midi: 0
division_midi: 0
greater_than_midi: 81
equality_midi: 0
less_than_midi: 0

[articulation]
# articulation name : threshold in seconds
chord: 0.02
staccato: 0.35
sostenuto: 0.8

[ar]
dot: 21
create: 24
select: 26
nextt: 29
transform: 31
shape: 33
clear: 35
generation: 36
store_collection: -1
transpositon_even: -8
transposition_odd: -5
# options are: local or leave blank
server: local

[easter eggs]
