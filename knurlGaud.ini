# ======================================================
# mercury.ini
#
# Mercury extension for CodeKlavier
# ======================================================

# ======================================================
# Midi Setup

[midi]
# midi options of the device to use
port: 2

# IAC driver loopback:
# noteon_id: 144

# M-audio midi controller:
# noteon_id: 152
# noteoff_id: 128
# pedal_id: 184
# pedal_midi_sostenuto: 7

# Yamaha Clavinova:
noteon_id: 144
noteoff_id: 128
pedal_id: 176
pedal_midi_sostenuto: 66

# Casio keyboard:
# pedal_midi_sostenuto: 67

# ======================================================
# Mapping Mode 1-1

[Hello World]
# Just play a single note, not using.
# Could be useful to type in single numbers and non-alphanumeric characters

# simple alphanumeric & commands 1-1 mapping used Hello World module
# midinumber  :  alphanumeric or command mapping
22: backspace
21: enter
69: backspace
70: 1
71: 2
72: 3
73: 4
74: 5
75: 6
76: 7
77: 8
78: 9
79: 0
80: _
81: a
82: b
83: c
84: d
85: e
86: f
87: g
88: h
89: i
90: j
91: k
92: l
93: m
94: n
95: o
96: p
97: q
98: r
99: s
100: t
101: u
102: v
103: w
104: x
105: y
106: z
108: space
toggle: 107
toggle_callback: none



# ======================================================
# Shortcuts
# 	first key that remains pressed, second key

[shortcuts]
eval: enter

# Optional: map the shortcuts to snippets defined in the
# sections below to replace default evaluation
[shortcuts mapping]
eval: eval

# simple alphanumeric & commands 1-1 mapping used in
# Motippets module and evaluation shortcut
[Motippets]
66: motippetssc-evaluate

# midi note register limits (21 <= mid_low is low register,
# between mid_low and mid_hi is mid register, > mid_hi is hi)
[Motippets register division]
mid_low: 44
mid_hi: 78

[chordal main motifs midi]



# can only call this once !!!- not anymore!!!
[melodic main motifs midi]
hello: 86, 88, 90






# ======================================================
# Conditional Motifs !!! IGNORE FOR NOW !!!

[chordal conditional motifs midi]

[melodic conditional motifs midi]
conditional_2: 48, 51, 55, 60, 67, 72, 75
conditional_3: 75, 72, 67, 63, 60, 55, 48
conditional_1: 79, 84, 87, 91, 90
conditional_4: 31, 35, 39, 43, 42

[chordal conditional results motifs midi]
conditional_result_2: 23, 24, 25
conditional_result_loop_stop: 24, 27, 31
conditional_result_mpamount: 96, 99, 98
conditional_result_v_color: 96, 90, 91, 94

[melodic conditional results motifs midi]
conditional_result_3: 68,74,74,63,69
#conditional_result_gomb: 41, 40, 38, 36, 35, 33, 31, 29, 28, 26, 24, 23, 21
conditional_result_5: 26,23,23
conditional_result_kamb: 24, 25, 26, 27, 28, 29, 30, 31
conditional_result_reus: 96, 97, 97, 97
conditional_result_pillars: 96, 99, 97, 98
conditional_result_multiples: 96, 90, 91, 94, 96, 99, 98



# ======================================================
# Melodic Motifs
# > Anne sets motifs

[melodic mini motifs]


[chordal mini motifs]


# ======================================================
# Code Snippets
# > The output of the corresponding motif (unique names)

[snippets code output]

# Global Settings
hello: hello


# ===========================================
#conditionals
conditional_1: //setting up a conditional: IF number of notes played is more than 100 in...
conditional_4: //setting up an ONGOING conditional: IF number of notes played is more than 150 in...
conditional_2: //setting up an ONGOING loop that checks the range
conditional_3: //setting up a conditional: IF range is less than...

# motif name : code, flag [osc | reset | gomb], [osc address | motif_name to reset], optional flag [grab_value | a value], optional flag [random1 | random2]
conditional_result_kamb_comment:// if true -> start Knurl ambience, if false -> stop Knurl ambience
conditional_result_kamb_true: true, osc, knurl/trigger, Ambience, 1
conditional_result_kamb_false: false,  osc, knurl/trigger, Ambience, 0


conditional_result_reus_comment:// if true -> start Reus synth, if false -> stop Reus synth
conditional_result_reus_true: true, osc, knurl/trigger, Reus, 1
conditional_result_reus_false: false, osc, knurl/trigger, Reus, 0

conditional_result_loop_stop_comment: stop perpetual conditionals
conditional_result_loop_stop_true: //CODEKLAVIER loop_stop, loop_stop
conditional_result_loop_stop_false: //CODEKLAVIER loop still going

[snippets code output callback]
# motif_name : code output
# (code to be evaluated after the normal code output, for example: for unmapping)
# (duplicate names won't work!)
#mini_set_tempo: callback mini


[snippets special flags]
# motif name, flag [reset, ] , flag [motif_name to reset, ]
conditional_result_2_true: reset, motif_1
mini_set_pixel: callback mini

[motif counter]
playlimit: 1

[snippets for tremolos]


[conditionals settings]
#name : type [note_count, range_more_than, range_less_than], [perpetual (true | false): 1 | 0], optional settings [totalnotes, ]
conditional_1: note_count, 0, 100
conditional_2: range_more_than, 1
conditional_3: range_less_than, 0
conditional_4: note_count, 1, 150

# make volume,

[motippets display settings]
#motif_name : display column id
#mini_set_tempo: 2
time_test: 2
tone_mel3: 2
bell_time: 2
number: 2
numberinverse: 2
set_bass_lfo_value: 2
delay_set: 2
time_set: 2
time_set2: 2
speed_set: 2
speed_set_neg: 2
reverb_set: 2
lfo_set: 2
gain_set: 2
set_volume: 2
color_ramge: 2
amount_set: 2
webcam: 2


[motippets random limits]
# name : bottom limit, upper limits.
random: 50, 51
random1: 0.01, 1.2
random2: -2, 10
# NOTE: random is also used for range_counter conditional limits
# random2 multiplies by a value extracted from the function where it is used

[ckalculator]
shift: off
wrong_note_tolerance: 1

[lambda]
# lambda function : midi number mapped to the function
evaluate_function: 59
identity_midi: 23
select_first_midi: 0
select_second_midi: 0
successor_midi: 83, 95
predecessor_midi: 0
add_midi: 107
subtract_midi: 71
mult_midi: 0
division_midi: 0
greater_than_midi: 47
equality_midi: 35
less_than_midi: 0

[articulation]
# articulation name : threshold in seconds
chord: 0.02
staccato: 0.35
sostenuto: 0.8

[ar]
