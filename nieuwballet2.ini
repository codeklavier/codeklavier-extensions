[midi]
# midi options of the device to use
port: 2

#IAC driver loopback:
#noteon_id: 144

#M-audio midi controller:
#noteon_id: 152
#noteoff_id: 128
#pedal_id: 184
#pedal_midi_sostenuto: 7

#Yamaha Clavinova:
noteon_id: 144
noteoff_id: 128
pedal_id: 176
pedal_midi_sostenuto: 66

#Casio keyboard:
#pedal_midi_sostenuto: 67


[Hello World]
# simple alphanumeric & commands 1-1 mapping used Hello World module
# midinumber  :  alphanumeric or command mapping
22: "
25: Texts[0] = "
27: Texts[1] = "
30: Texts[2] = "
32: Texts[3] = "
34: Texts[4] = "
37: Texts[5] = "
81: a
82: b
83: c
84: d
85: e
86: f
87: g
88: h
89: i
90: j
91: k
92: l
93: m
94: n
95: o
96: p
97: q
98: r
99: s
100: t
101: u
102: v
103: w
104: x
105: y
106: z
108: space
toggle: 107
toggle_callback: none


[shortcuts]
# 1 or two keys that can be pressed.
# first keys remain pressed, last key is pressed and released.
# (At least "eval" should always be present)
eval: enter
eval_manual: enter
move: tab
move2: tab
backmove: shift, tab
shortcut_name1: cmd, alt, j
shortcut_name2: cmd, shift, c
quit: cmd, q
window_switch: cmd, `


[shortcuts mapping]
# Optional: map the shortcuts to snippets defined in the sections below to replace default evaluation
eval_manual: eval_manual
move: move
move2: move2
backmove: backmove
shortcut_name1: shortcut_name1
shortcut_name2: shortcut_name2
quit: quit
window_switch: window_switch

[Motippets]
# simple alphanumeric & commands 1-1 mapping used in Motippets module
66: motippetssc-evaluate

[Motippets register division]
# midi note register limits (21 <= mid_low is low register, between mid_low and mid_hi is mid register, > mid_hi is hi)
mid_low: 44
mid_hi: 79

[chordal main motifs midi]


[melodic main motifs midi]
offstage: 81, 91, 93, 104
glossary: 46, 45, 42, 41, 40, 39
adagio: 69, 61, 66, 61, 66, 63, 61, 66


[chordal conditional motifs midi]

[melodic conditional motifs midi]
conditional_2: 41, 39, 29, 31
conditional_1: 24

[chordal conditional results motifs midi]
conditional_result_3: 21,22,23

[melodic conditional results motifs midi]
conditional_result_dancingwindow: 81, 81, 86, 91, 84, 86


[melodic mini motifs]
eval_manual: 21
move: 85, 87
move2: 61, 58, 63, 58
texts: 62, 50, 50, 50, 50, 50, 50, 50,50, 50, 50, 50
pirouette: 94, 99, 97, 96, 92
window_switch: 33
scrollBottom: 96, 108, 96, 94, 96, 94, 93, 94, 93, 91, 103, 91, 93
step1: 80, 82
step3: 84, 96, 101, 94, 96, 89
step5: 84, 96, 94, 93, 89
breath_neg: 85, 84, 82, 84, 80, 85, 84, 82, 84, 80
breath_pos: 87, 84, 82

[chordal mini motifs]
mini_motif_9: 62, 65, 66
blackout: 103, 97, 96, 100, 102
finissage: 89, 82, 84, 85
scrollTop: 94, 84, 89

[snippets code output]
# motif_name : code output
# (in this case supercollider)
# (duplicate names won't work!)
offstage: Offstage ()
blackout: BlackOut ()
finissage: Finissage ()
glossary: Glossary_of_the_Nieuw_Ballet ()
pirouette: Pirouette ()
texts:
adagio: Adagio ()
scrollBottom: à_Terre();
scrollTop: Temps_Levé();
step1: Step1 ()
step3: Step3 ()
step5: Step5 ()
breath_neg: Breathe (-100)
breath_pos: Breathe (+100)

#conditionals
conditional_1: setting up a conditional: IF number of notes played is more than 100 in...
conditional_2: setting up an ONGOING conditional: IF range is more than...
conditional_3: setting up an ONGOING conditional: IF range is less than...
conditional_4: setting up an ONGOING conditional: IF number of notes played is more than 150 in...
conditional_5: setting up a conditional: IF number of notes played is more than 50 in...

# motif name : code, flag [osc | gomb], optional flag [osc address], optional flag [grab_value | a value], optional flag [random, random1 | random2]
conditional_result_dancingwindow_comment: if true -> start dancing!
conditional_result_dancingwindow_true: DancingWindow ()
conditional_result_dancingwindow: NoDance ()


[snippets code output callback]
# motif_name : code output
# (code to be evaluated after the normal code output, for example: for unmapping)
# (duplicate names won't work!)
mini_motif_1: ~map_rhythm = false; Ndef(\piano_fx).set(\rate, ~tremoloL1.linlin(1, 16, 1/2, 18));

[snippets special flags]
# motif name, flag [reset, ] , flag [motif_name to reset, ]

[motif counter]
playlimit: 10000


[snippets for tremolos]
texts: Texts[,,]=
breath_neg: Breathe (-,,),minmax(100-1000)
breath_pos: Breathe (+,,),minmax(100-1000)

[conditionals settings]
#name : type [note_count, range_more_than, range_less_than], [perpetual (true | false): 1 | 0], optional settings [totalnotes, ]
conditional_1: note_count, 0, 100
conditional_2: range_more_than, 1
conditional_3: range_less_than, 1
conditional_4: note_count, 1, 150
conditional_5: note_count, 0, 50

# make volume,

[motippets display settings]
#motif_name : display column id
motif_1: 2


[motippets random limits]
# name : bottom limit, upper limits.
random: 15, 20
random1: 1, 80
random2: -2, 10
#NOTE: random2 multiplies by a value extracted from the function where it is used

[ckalculator]
shift: off
wrong_note_tolerance: 1

[lambda]
# lambda function : midi number mapped to the function
evaluate_function: 59
identity_midi: 23
select_first_midi: 0
select_second_midi: 0
successor_midi: 83, 95
predecessor_midi: 0
add_midi: 107
subtract_midi: 71
mult_midi: 0
division_midi: 0
greater_than_midi: 47
equality_midi: 35
less_than_midi: 0

[articulation]
# articulation name : threshold in seconds
chord: 0.02
staccato: 0.35
sostenuto: 0.8
