[midi]
# midi options of the device to use
port: 2

#IAC driver loopback:
#noteon_id: 144

#M-audio midi controller:
#noteon_id: 152
#noteoff_id: 128
#pedal_id: 184
#pedal_midi_sostenuto: 7

#Yamaha Clavinova:
noteon_id: 144
noteoff_id: 128
pedal_id: 176
pedal_midi_sostenuto: 66

#Casio keyboard:
#pedal_midi_sostenuto: 67


[Hello World]
# simple alphanumeric & commands 1-1 mapping used Hello World module
# midinumber  :  alphanumeric or command mapping
22: R
23: I
24: T
25: E
26: space
27: o
28: f
29: space
30: S
31: P
32: R
33: I
34: N
35: G
48: Texts[0]=
49: Texts[1]=
50: Texts[2]=
51: Texts[3]=
52: Texts[4]=
53: Texts[5]=
95: backspace
108: down
toggle: 107
toggle_callback: none

[shortcuts]
# 1 or two keys that can be pressed.
# first keys remain pressed, last key is pressed and released.
# (At least "eval" should always be present)
eval: enter
eval_manual: enter
move: tab
move2: tab
backmove: shift, tab
shortcut_name1: cmd, alt, j
shortcut_name2: cmd, shift, c
quit: cmd, q
window_switch: cmd, `

[shortcuts mapping]
# Optional: map the shortcuts to snippets defined in the sections below to replace default evaluation
move: move
move2: move2
backmove: backmove
eval_manual: eval_manual
shortcut_name1: shortcut_name1
shortcut_name2: shortcut_name2
quit: quit
window_switch: window_switch

[Motippets]
# simple alphanumeric & commands 1-1 mapping used in Motippets module and evaluation shortcut
66: motippetssc-evaluate

[Motippets register division]
# midi note register limits (21 <= mid_low is low register, between mid_low and mid_hi is mid register, > mid_hi is hi)
mid_low: 35
mid_hi: 79

[chordal main motifs midi]

[melodic main motifs midi]
quit: 36, 37, 38
adagio: 72, 71, 72, 71, 67, 64, 71, 69, 72, 71, 72, 71, 67, 64, 71


[chordal conditional motifs midi]
conditional_2: 99, 94, 91, 97

[melodic conditional motifs midi]
conditional_1: 49, 45, 48, 49, 43
conditional_3: 97, 93, 96, 97, 91

[chordal conditional results motifs midi]
conditional_result_2: 23,24,25

[melodic conditional results motifs midi]
conditional_result_3: 68,74,74,63,69
conditional_result_4: 99, 92, 90, 89, 92, 94
conditional_result_5: 26,23,23

[melodic mini motifs]
mini_set_pixel: 48, 49, 50, 51
#scrollTop:Temps_Levé();
#scrollBottom: à_Terre();
#zoom in: Breathe_In (+100)
#zoom out: Breathe_Out (-100)
#historyBack: Arrière();
#historyForward: Avant();
# turn: Pirouette();
#pause: Pause_Pirouette();
#glossary: Glossary_of_the_Nieuw_Ballet ()
#silence: Silence ()
#blackOut: BlackOut();
#offstage: Offstage();
#reload: reEntrée_de_Ballet();
#closepopup: Finissage ()
#warning: Warning ()
#nodance: NoDance ()
loadFunctionBody: 36, 41
ecarte: 36, 42
pauseAllonge: 36, 43
turn: 36, 44
pause: 36, 45
derriere: 36, 46
historyBack: 36, 48
historyForward: 36, 49
# loadFunction html
loadFunctionLinks: 36, 50
links: 36, 51
selectLink20: 36, 52
selectLink50:  36, 53
selectLink100:  36, 54
click20: 36, 55
click50: 36, 56
click100: 36, 57
danseuse100: 36, 58
scrollBottom: 55, 52, 48, 43, 39, 43, 47, 52
reload: 36, 62
shortcut_name1: 36, 63
shortcut_name2: 36, 64
window_switch: 85, 90, 85, 90, 87, 85, 90
zoom in: 58, 56, 55, 53
zoom out: 86, 85, 84, 83, 82
glossary: 36, 68
openpop2: 36, 69
openpop3: 36, 70
openpop4: 36, 71
openpop5: 36, 72
openpop6: 36, 73
openpop7: 36, 74
closepopup: 36, 75
warning: 36, 76
blackOut: 81, 91, 93, 104
offstage: 24, 25, 26
move2: 61, 58, 63, 58
scrollTop: 84, 89, 84, 91


[chordal mini motifs]
mini_motif_9: 62, 65, 66
#move: 44, 55, 63, 52, 58, 61, 40, 47
move: 44, 40, 47, 52
backmove: 55, 58, 61, 63
eval_manual: 67, 70, 73, 75

[snippets code output]
# motif_name : code output
# (in this case javascript)
# (duplicate names won't work!)
# code + iframe here: https://github.com/JoBCB/NieuwBallet
adagio: Adagio();
mini_set_pixel: // scroll
scrollTop:Temps_Levé();
scrollBottom: à_Terre();
zoom in: Breathe (+100)
zoom out: Breathe (-100)
historyBack: Arrière();
historyForward: Avant();
turn: Pirouette();
pause: Pause_Pirouette();
glossary: Glossary_of_the_Nieuw_Ballet ()
silence: Silence ()
blackOut: BlackOut();
offstage: Offstage();
reload: reEntrée_de_Ballet();
closepopup: Finissage ()
warning: Warning ()
nodance: NoDance ()
#shortcut_name1: cmd, alt, j
#shortcut_name2: cmd, shift, c
#loadFunctionBody: document.querySelector("#rso");
#ecarte: Écarté();
#pauseAllonge: Pause_Allongé();
#derriere: Derrière();
# loadFunction html
#loadFunctionLinks: document.querySelector("#cnt");
#links: l = document.querySelectorAll("a");
#selectLink20:  l[20];
#selectLink50:  l[50];
#selectLink100:  l[100];
#click20: l[20].click();
#click50: l[50].click();
#click100: l[100].click();
#danseuse100: Danseuse_100();

#conditionals
conditional_1: setting up a conditional: IF number of \nnotes played is more than 100 in...
conditional_2: //setting up an ONGOING conditional: IF range is more than...
conditional_3: setting up an ONGOING conditional: \nIF range is less than...

# motif name : code, flag [osc | reset | gomb], [osc address | motif_name to reset], optional flag [grab_value | a value], optional flag [random1 | random2]
conditional_result_2_comment: //If true, add window
conditional_result_2_true: DancingWindow ()
conditional_result_2_false: //nothing

[snippets code output callback]
# motif_name : code output
# (code to be evaluated after the normal code output, for example: for unmapping)
# (duplicate names won't work!)
mini_motif_1: ~map_rhythm = false; Ndef(\piano_fx).set(\rate, ~tremoloL1.linlin(1, 16, 1/2, 18));

[snippets special flags]
# motif name, flag [reset, ] , flag [motif_name to reset, ]
conditional_result_2_true: reset, motif_1

[motif counter]
playlimit: 100

[snippets for tremolos]
# 3 values (also whitespace) separated by commas are allowed: the code expression to print, a prefix on the tremolo value, a suffix for the value.
# there should be minumum 1 value.
# example:
# myvar = ,( , )
# will result in myvar = ( 3 )
mini_motif_1: ~tremoloL1 =,(,)
mini_set_pixel: Step,,()


[conditionals settings]
#name : type [note_count, range_more_than, range_less_than], [perpetual (true | false): 1 | 0], optional settings [totalnotes, ]
conditional_1: note_count, 0, 100
conditional_2: range_more_than, 1
conditional_3: range_less_than, 1
# make volume


[motippets display settings]
#motif_name : display column id
motif_1: 1
adagio: 1
mini_set_pixel: 2



[motippets random limits]
# name : bottom limit, upper limits.
random: 10, 45
random1: 1, 80
random2: -2, 10
#NOTE: random2 multiplies by a value extracted from the function where it is used

[ckalculator]
shift: off
wrong_note_tolerance: 1

[lambda]
# lambda function : midi number mapped to the function
evaluate_function: 59
identity_midi: 23
select_first_midi: 0
select_second_midi: 0
successor_midi: 83, 95
predecessor_midi: 0
add_midi: 107
subtract_midi: 71
mult_midi: 0
division_midi: 0
greater_than_midi: 47
equality_midi: 35
less_than_midi: 0

[articulation]
# articulation name : threshold in seconds
chord: 0.02
staccato: 0.35
sostenuto: 0.8
