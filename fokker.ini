[midi]
# midi options of the device to use
port: 4

#Midi controller:
noteon_id: 144
#pedal_id: 184
#pedal_midi_sostenuto: 7


#Casio keyboard:
#pedal_midi_sostenuto: 67


[Hello World]
# simple alphanumeric & commands 1-1 mapping used Hello World module
# midinumber  :  alphanumeric or command mapping
22: .tempo
23: .play
25: e
32: enter
33: sc-evaluate
39: v
42: u
49: =
50: ~
51: +
52: *
54: -
55: .
56: space
57: 0
58: 1
59: 2
60: 3
62: p
63: s
64: n
65: d
66: i
67: m
68: a
70: n
71: t
73: o
74: W
86: g
87: i
88: n
89: d
90: a
91: k
92: h
93: l
94: b
95: backspace
96: o
97: c
98: r
105: .
108: down
toggle: 107

[shortcuts]
# first key that remains presses, second key
eval: shift, enter

[Motippets]
# simple alphanumeric & commands 1-1 mapping used in Motippets module
66: motippetssc-evaluate

[Motippets register division]
# midi note register limits (21 <= mid_low is low register, between mid_low and mid_hi is mid register, > mid_hi is hi)
mid_low: 48
mid_hi: 85

[chordal main motifs midi]
motif_1: 59, 62, 66, 60, 64, 67, 62, 69, 66
motif_2: 78, 69, 73, 62, 79, 74, 68, 69, 61, 44, 49, 43, 38
motif_3: 56, 61, 55, 50, 44, 49, 43, 38
motif_5_co: 73, 69, 62, 80
motif_6_de: 61, 50, 57, 68
motif_5_kla: 60, 56, 49, 67
motif_6_vier: 72, 68, 61, 79

[melodic main motifs midi]
disklavier: 62, 66, 68, 70, 73
motif_4_stop: 24, 24, 34, 43, 46, 36, 46, 55, 58, 48, 58, 67, 70, 60, 70, 79, 82, 72, 82, 91, 94, 84, 94, 103 ,106, 106



[chordal conditional motifs midi]
conditional_1: 36, 31, 29, 26, 28, 35, 38, 33, 24, 26, 31, 28, 33, 21, 23, 29
conditional_4: 98, 100, 103, 96, 101, 104, 99, 97, 102
conditional_5: 60, 61, 66, 67


[melodic conditional motifs midi]
conditional_2: 37, 33, 36, 37, 31
conditional_3: 97, 93, 96, 97, 91


[chordal conditional results motifs midi]
conditional_result_3: 21,22,23
conditional_result_4: 23,24,25
conditional_result_6: 96, 94, 103, 106
conditional_result_loop_stop: 24, 25, 26

[melodic conditional results motifs midi]
conditional_result_1: 68,74,74,63,69
conditional_result_2: 99, 92, 90, 89, 92, 94
conditional_result_5: 26,23, 23
conditional_result_7: 48, 48, 34, 31, 22, 22
conditional_result_disklavier_stop: 106, 104, 102, 102, 106, 98
conditional_result_disklavier_stop2: 94, 92, 90, 90, 94, 86
conditional_result_disklavier_stop3: 82, 80, 78, 78, 82, 74
conditional_result_disklavier_stop4: 70, 68, 66, 66, 70, 62

[melodic mini motifs]
mini_motif_1: 35, 38, 42
mini_motif_2: 86, 91, 92, 97
mini_motif_3: 38, 42, 47
mini_motif_4: 86, 90, 93
mini_motif_5: 74, 79, 80, 85
mini_motif_6: 69, 66, 62, 71
mini_motif_8: 62, 69, 73, 78
mini_motif_disk: 86, 97, 94
mini_motif_disk_neg: 34, 26, 37
mini_motif_ost_a: 62, 62, 62, 63
mini_motif_ost_b: 66, 66, 66, 67
mini_motif_ost_c: 68, 68, 68, 69
mini_motif_ost_reset: 26, 26, 26, 25
mini_motif_ost2_g: 74, 74, 74, 75
mini_motif_ost2_h: 78, 78, 78, 79
mini_motif_ost2_i: 80, 80, 80, 81
mini_motif_ost2_reset: 25, 25, 25, 24
mini_motif_ost3_k: 86, 86, 86, 87
mini_motif_ost3_l: 90, 90, 90, 91
mini_motif_ost3_m: 92, 92, 92, 93
mini_motif_ost3_reset: 24, 24, 24, 23
mini_motif_osts_orn: 23, 23, 23, 22
mini_motif_ost_play: 50, 51, 59, 54, 56, 57
mini_motif_ost2_play: 51, 53, 49, 55, 56, 58
mini_motif_ost3_play: 53, 53, 59, 53, 57, 55
pagedown: 108
mini_motif_unmapH: 86, 92, 95, 98
mini_motif_unmapM: 50, 56, 59, 62
mini_motif_unmapL: 26, 32, 35, 38
mini_motif_diskd1f: 86, 90, 94
mini_motif_diskd2f: 74, 78, 82


[chordal mini motifs]
mini_motif_9: 62, 65, 66
mini_motif_disk_amp: 62, 66, 70, 73
mini_motif_disk2: 74, 77, 78
mini_motif_disk2_neg: 50, 53, 54
mini_motif_diskd1s: 26, 34, 30
mini_motif_diskd2s: 46, 38, 42
mini_motif_org1f: 31, 32, 37
mini_motif_org1s: 30, 31, 36
mini_motif_org2f: 29, 30, 35
mini_motif_org2s: 28, 29, 34
mini_motif_ampg: 26, 27, 28



[snippets code output]
# motif_name : code output
# (in this case supercollider)
# (duplicate names won't work!)
motif_1: ~snippet1 = Ndef(\piano_fx, {|dec=40, amp=0.01, rate=1| GVerb.ar(HPF.ar(SoundIn.ar(0,2), 9), 109, dec)*LFTri.kr(rate)*amp}).play(0,2)
motif_2: ~organ.play;
motif_3: ~organ2.play;
disklavier: ~piano.play;
motif_4_stop: ~stop.all;
motif_5_co:        C           O
motif_6_de:    D           E
motif_5_kla:     K      L       A
motif_6_vier: V      I      E      R

mini_motif_1: ~map_rhythm = true; Ndef(\piano_fx).map(\rate, Ndef(\krm1_r)); ~tremoloL1;
mini_motif_2: //map organ pitch one
mini_motif_3: ~map_amplitude = true;  Ndef(\piano_fx).map(\amp, Ndef(\krm1_a)); ~tremoloL1amp;
mini_motif_4: Ndef(\piano_fx).map(\dec, Ndef(\krm1_d)); ~tremoloH1
mini_motif_5: //map organ pitch two
mini_motif_6: ~map_amp_ost = true; ~tremoloM1;
mini_motif_8: ~map_amp_org = true; ~tremoloM3;
mini_motif_9: "say -v juan belly mamacita".unixCmd;
mini_motif_disk: ~pno1 = ~pno1 + 4;
mini_motif_disk_neg: ~pno1 = ~pno1 - 3;
mini_motif_disk_amp: ~map_amp_pno = true; ~tremoloM4;
mini_motif_disk2: ~pno2 = ~pno2 + 3
mini_motif_disk2_neg: ~pno2 =~pno2 - 2
mini_motif_ost_a: a = a + 2;
mini_motif_ost_b: b = b + 2;
mini_motif_ost_c: c = c + 2;
mini_motif_ost_reset: a = b = c = 2;
mini_motif_ost2_g: g = h + 2;
mini_motif_ost2_h: h = i + 2;
mini_motif_ost2_i: i = g + 2;
mini_motif_ost2_reset: g = h = i = 1;
mini_motif_ost3_k: k = k * 2;
mini_motif_ost3_l: l = l * 3;
mini_motif_ost3_m: m = m / 1.3;
mini_motif_ost3_reset: k = l = m = 1;
mini_motif_osts_orn: a = g = k = 0.1;
mini_motif_ost_play: ~ost.play
mini_motif_ost2_play: ~ost2.play
mini_motif_ost3_play: ~ost3.play
pagedown: down
mini_motif_unmapH: unmap
mini_motif_unmapM: unmap
mini_motif_unmapL: unmap
mini_motif_diskd1f: ~pnod1= ~pnod1/1.5;
mini_motif_diskd2f: ~pnod2= ~pnod2/4*3
mini_motif_diskd1s: ~pnod1= ~pnod1*1.5;
mini_motif_diskd2s: ~pnod2= ~pnod2*4/3;
mini_motif_org1f: ~od1= ~od1/2
mini_motif_org1s: ~od1= ~od1*2
mini_motif_org2f: ~od2= ~od2/2
mini_motif_org2s: ~od2= ~od2*2
mini_motif_ampg: ~ampdong= ~ampdong + 0.5


#conditionals
conditional_1: setting up a conditional: IF number of notes played is more than 100 in...
conditional_2: setting up an ONGOING conditional: IF range is more than...
conditional_3: setting up an ONGOING conditional: IF range is less than...
conditional_4: setting up an ONGOING conditional: IF number of notes played is more than 150 in...
conditional_5: setting up a conditional: IF number of notes played is more than 50 in...

# motif name : code, flag [osc | gomb], optional flag [osc address], optional flag [grab_value | a value], optional flag [random, random1 | random2]
conditional_result_1_comment: if true -> stop ~snippet2, if false -> nothing
conditional_result_1_true: ~snippet2.stop;
conditional_result_1_false: //nothing

conditional_result_2_comment: if true -> stop ~snippet1, if false -> nothing
conditional_result_2_true: ~snippet1.stop(20);
conditional_result_2_false: //nothing

conditional_result_3_comment: if true -> play gong sound!, if false -> nothing
conditional_result_3_true: ~gong.play, osc, gong, grab_value, random2
conditional_result_3_false:

conditional_result_4_comment: Activate self-destruct mechanism
conditional_result_4_true: ~stop.all;, gomb
conditional_result_4_false: FAIL

conditional_result_5_comment: if true -> if true -> play huygens sample, if false -> play huygens sample
conditional_result_5_true: ~huygens.stuk, osc, huygens, grab_value, random1
conditional_result_5_false: ~huygens.stuk, osc, huygens, grab_value, random1

conditional_result_6_comment: if true -> play disklavier gong
conditional_result_6_true: DOOOOOOOOOOOONG!, osc, pianogong, grab_value, random
conditional_result_6_false: FAIL!

conditional_result_7_comment: if true -> piano cluster takeover
conditional_result_7_true: piano takeover + 1, osc, pianotake, grab_value, random
conditional_result_7_false: FAIL!

conditional_result_disklavier_stop_comment: if true -> stop piano pitch 1, if false -> extra piano pitch!
conditional_result_disklavier_stop_true: stop piano, osc, pianostop, stop1
conditional_result_disklavier_stop_false: piano2, osc, pianoplay, play12

conditional_result_disklavier_stop2_comment: if true -> stop piano pitch 1 & 2, if false -> extra piano pitch!
conditional_result_disklavier_stop2_true: stop 2 pianos, osc, pianostop, stop12
conditional_result_disklavier_stop2_false: piano3, osc, pianoplay, play123

conditional_result_disklavier_stop3_comment: if true -> stop piano pitch 1, 2 & 3, if false -> piano go WILD
conditional_result_disklavier_stop3_true: stop 3 pianos, osc, pianostop, stop123
conditional_result_disklavier_stop3_false: pianoWILD, osc, pianoplay, playwild

conditional_result_disklavier_stop4_comment: if true -> stop ostinatos, if false -> double speed
conditional_result_disklavier_stop4_true: stop ostinatos, osc, pianostop, stoposts
conditional_result_disklavier_stop4_false: double speed, osc, pianoplay, playdouble

conditional_result_loop_stop_comment: stop perpetual conditionals
conditional_result_loop_stop_true: "say -v vi stopping".unixCmd;, loop_stop
conditional_result_loop_stop_false: "say -v vi not stopping, ha haha".unixCmd;


[snippets code output callback]
# motif_name : code output
# (code to be evaluated after the normal code output, for example: for unmapping)
# (duplicate names won't work!)
mini_motif_1: ~map_rhythm = false; Ndef(\piano_fx).set(\rate, ~tremoloL1.linlin(1, 16, 1/2, 18));
mini_motif_2: unmapped
mini_motif_3: ~map_amplitude = false; \amp, Ndef(\piano_fx).set(\amp, ~tremoloL1amp.linlin(1, 16, 0.01, 1));
mini_motif_4: [\pulse, \pulse2, \pulse3, \pulse4, \pulse5, \pulse6].do{|i| Ndef(i).set(\fx, ~tremoloH1.linlin(1, 16, 1, 88));}
mini_motif_5: unmapped
mini_motif_6: ~map_amp_ost = false;
mini_motif_8: ~map_amp_org = false;
mini_motif_9: {1.wait; "say -v vi hello handsome".unixCmd}.fork;
mini_motif_disk_amp: ~map_amp_pno = false; ~tremoloM4.linlin(1, 16, 0.02, 1.2);

[snippets special flags]
# motif name, flag [reset, ] , flag [motif_name to reset, ]
conditional_result_1_true: reset, motif_2
conditional_result_2_true: reset, motif_1
conditional_result_disklavier_stop_true: reset, disklavier
conditional_result_disklavier_stop2_true: reset, disklavier
conditional_result_disklavier_stop3_true: reset, disklavier
conditional_result_disklavier_stop3_false: reset, motif_4_stop

[motif counter]
playlimit: 1

[snippets for tremolos]
mini_motif_1: ~tremoloL1 =
mini_motif_2: ~o1 =
mini_motif_3: ~tremoloL1amp =
mini_motif_4: ~tremoloH1 =
mini_motif_5: ~o2 =
mini_motif_6: ~tremoloM1 =
mini_motif_8: ~tremoloM3 =
mini_motif_disk_amp: ~tremoloM4 =


[conditionals settings]
#name : type [note_count, range_more_than, range_less_than], [perpetual (true | false): 1 | 0], optional settings [totalnotes, ]
conditional_1: note_count, 0, 100
conditional_2: range_more_than, 1
conditional_3: range_less_than, 1
conditional_4: note_count, 1, 150
conditional_5: note_count, 0, 50

# make volume,

[motippets display settings]
#motif_name : display column id
motif_1: 2
motif_2: 2
motif_3: 2
motif_4_stop: 2
disklavier: 1
mini_motif_1: 2
mini_motif_2: 2
mini_motif_3: 2
mini_motif_4: 2
mini_motif_5: 2
mini_motif_6: 1
mini_motif_8: 2
mini_motif_9: 2
mini_motif_disk2: 1
mini_motif_disk2_amp: 1
mini_motif_disk_amp: 1
mini_motif_ost_a: 1
mini_motif_ost_b: 1
mini_motif_ost_c: 1
mini_motif_ost_reset: 1
mini_motif_ost2_g: 1
mini_motif_ost2_h: 1
mini_motif_ost2_i: 1
mini_motif_ost2_reset: 1
mini_motif_ost3_k: 1
mini_motif_ost3_l: 1
mini_motif_ost3_m: 1
mini_motif_ost3_reset: 1
mini_motif_osts_orn: 1
mini_motif_ost_play: 1
mini_motif_ost2_play: 1
mini_motif_ost3_play: 1
motif_5_co: 1
motif_6_de: 2
motif_5_kla: 3
motif_6_vier: 4
pagedown: 5
mini_motif_unmapH: 5
mini_motif_unmapM: 5
mini_motif_unmapL: 5
mini_motif_diskd1f: 1
mini_motif_diskd1s: 1
mini_motif_diskd2f: 1
mini_motif_diskd2s: 1
mini_motif_org1f: 2
mini_motif_org1s: 2
mini_motif_org2f: 2
mini_motif_org2s: 2
mini_motif_ampg: 1

[motippets random limits]
# name : bottom limit, upper limits.
random: 10, 20
random1: 1, 80
random2: -2, 10
#NOTE: random2 multiplies by a value extracted from the function where it is used

[ckalculator]
shift: off
wrong_note_tolerance: 1

[lambda]
# lambda function : midi number mapped to the function
evaluate_function: 59
identity_midi: 23
select_first_midi: 0
select_second_midi: 0
successor_midi: 83, 95
predecessor_midi: 0
add_midi: 107
subtract_midi: 71
mult_midi: 0
division_midi: 0
greater_than_midi: 47
equality_midi: 35
less_than_midi: 0

[articulation]
# articulation name : threshold in seconds
chord: 0.02
staccato: 0.5
sostenuto: 0.8

[easter eggs]
# midinumber  :  easteregg text
9: Average number of times we pkill scsynth in a CK session
11: Number of lambda functions in our CKalculator
20: CodeKlavier has had 20 + performances
89: Years since lambda calculus was invented
127: Years since the moving picture was invented
262: CK followers on facebook - you should like us now!
763: Days since CodeKlavier's first public performance
1700: The piano has been around since then
1903: Alonzo Church was born
1910: The first volume of Principia Mathematica by Russel and White was published in this year
1912: The second volume of Principia Mathematica by Russel and White was published in this year.
1913: The third volume of Principia Mathematica by Russel and White was published in this year.
1930: Year lambda calculus was first introduced by Alonso Church
1960: Year that lambda calculus gained place in computer science and linguistics
1982: Felipe was born
1986: Anne was born
1990: Haskell first appeared
1995: JavaScript was invented by Brendan Eich
1999: Erlang was founded
2009: Idris appeared
2011: Year Felipe and Anne met during their studies at CVA

[ar]
